format 220

classcanvas 132482 class_ref 5318274 // EntitySelectStatement
  classdiagramsettings hide_attributes yes hide_operations yes member_max_width 0 show_context_mode uml end
  xyz 521 192 2005
end
classcanvas 133506 class_ref 5642114 // ChooseVehicleTypeClassCache
  classdiagramsettings member_max_width 0 end
  xyz 41 128 2000
end
classcanvas 133634 class_ref 5567874 // AbstractAsyncReadOnlyCache
  classdiagramsettings hide_attributes yes hide_operations yes member_max_width 0 show_context_mode uml end
  xyz 122 42 2006
end
note 133890 "The cached query is interesting.
Should work on it to:
 - Mor explicit (shared, unique ?)
 - Async

In the domain, should we be able to inherit to add idColumn(), etc ?

Inherit the cache !
Needs to implement approx 3 methods, but is much more flexible:
 - No select query factory constraint
 --> Can make the cache shared via a simple std::shared_ptr
 - The statement is visible in the same class"
  xyzwh 40.5 400.5 2000 521 257
relationcanvas 133762 relation_ref 6146818 // <generalisation>
  decenter_begin 507
  from ref 133506 z 2007 to ref 133634
  no_role_a no_role_b
  no_multiplicity_a no_multiplicity_b
end
relationcanvas 135682 relation_ref 6160258 // <directional composition>
  from ref 133506 z 2006 to ref 132482
  no_role_a no_role_b
  no_multiplicity_a no_multiplicity_b
end
end
