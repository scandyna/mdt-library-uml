class zmsTrainVehicule
!!!162306.cpp!!!	zmsTrainVehicule()
  pvType = UNKNOW;
  pvMicasMode = zmsDiagFrame::UNKNOW;
  pvIsZST = false;
  pvAddress = 0x00;
  pvFrontCouplingOccupied = false;
  pvBtCouplingOccupied = false;
  pvDirection = UNDEFINED;
!!!162434.cpp!!!	setType(in zmsMode : zmsDiagFrame::zms_mode_t) : void
  pvMicasMode = zmsMode;
  // Type de véhicule et le mode master ou non selon mode du ZMS
  if(zmsMode == zmsDiagFrame::ZLOK){
    pvType = RE450;
    pvIsZST = true;
  }else if(zmsMode == zmsDiagFrame::ULOK){
    pvType = RE450;
    pvIsZST = false;
  }else if(zmsMode == zmsDiagFrame::STWG){
    pvType = BTSBZ;
    pvIsZST = true;
  }else if(zmsMode == zmsDiagFrame::PASSIVBT){
    pvType = BTSBZ;
    pvIsZST = false;
  }else{
    pvType = UNKNOW;
    pvIsZST = false;
  }
!!!162562.cpp!!!	setType(in type : zmsTrainVehicule::vehicule_type_t) : void
  pvType = type;
!!!162690.cpp!!!	micasModeText() : string
  if(pvMicasMode == zmsDiagFrame::ZLOK){
    return "ZLOK";
  }
  if(pvMicasMode == zmsDiagFrame::ULOK){
    return "ULOK";
  }
  if(pvMicasMode == zmsDiagFrame::STWG){
    return "STWG";
  }
  return "OFF";
!!!162818.cpp!!!	type() : zmsTrainVehicule::vehicule_type_t
  return pvType;
!!!162946.cpp!!!	typeText() : string
  string str;

  if(pvType == RE450){
    str = "Re450";
  }else if(pvType == BTSBZ){
    str = "Bt-SBZ";
  }else{
    str = "Unknow";
  }

  return str;
!!!163074.cpp!!!	isZST() : bool
  return pvIsZST;
!!!163202.cpp!!!	setAddress(in address : int) : void
  pvAddress = address;
  if(pvAddress == 0x20){
    pvIsZST = true;
  }else{
    pvIsZST = false;
  }
!!!163330.cpp!!!	address() : int
  return pvAddress;
!!!163458.cpp!!!	micasModeAndAddress() : string
  char strNum[20] = {'\0'};
  string str;

  if(pvAddress == 0){
    return "OFF";
  }
  if(snprintf(strNum, 20, "%x", pvAddress) < 1){
    return "";
  }
  // Format: mode MICAS + adresse
  str = "Mode: ";
  str += micasModeText();
  str += " , Adr: ";
  str += strNum;
  
  return str;
!!!163586.cpp!!!	setFrontCouplingOccupied(in occupied : bool) : void
  pvFrontCouplingOccupied = occupied;
!!!163714.cpp!!!	frontCouplingOccupied() : bool
  return pvFrontCouplingOccupied;
!!!163842.cpp!!!	setBtCouplingOccupied(in occupied : bool) : void
  pvBtCouplingOccupied = occupied;
!!!163970.cpp!!!	btCouplingOccupied() : bool
  return pvBtCouplingOccupied;
!!!164098.cpp!!!	setDirection(in dir : zmsTrainVehicule::direction_t) : void
  pvDirection = dir;
!!!164226.cpp!!!	direction() : zmsTrainVehicule::direction_t
  return pvDirection;
!!!164354.cpp!!!	invertDirection() : void
  if(pvDirection == NORMAL){
    pvDirection = INVERTED;
  }else if(pvDirection == INVERTED){
    pvDirection = NORMAL;
  }
!!!164482.cpp!!!	pictureBaseName() : string
  string str;

  // Nom de base selon type de véhicule
  if(type() == RE450){
    str = "re450";
  }else if(type() == BTSBZ){
    str = "btsbz";
  }else{
    str = "unknow";
  }
  // Ajout du -rev selon sens de marche
  if(pvDirection == INVERTED){
    str += "-rev";
  }

  return str;
