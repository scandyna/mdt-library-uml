format 204
"ImportZms" // ImportZms
  revision 4
  modified_by 2 "philippe"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "/home/philippe/Documents/Heig-vd/Windows/1_Diplome/03_Realisation/zmspruef/cpp/src/"
  cpp_src_dir "/home/philippe/Documents/Heig-vd/Windows/1_Diplome/03_Realisation/zmspruef/cpp/src/"
  classview 134658 "src"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 135042 "zmsComm"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 130178 "zmsComm"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 130306 "~zmsComm"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 130434 "open"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 4
	  param in name "portNumber" explicit_type "int"
	  param in name "byteTxWaitTime" explicit_type "int"
	  param in name "rxFrameMaxLen" explicit_type "uint"
	  param in name "eofChar" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Initialise communication

 Initialise communication

 \\param portNumber No du port série
 \\param byteTxWaitTime Temp d'attente entre 2 émission de bytes [ms] (Conseils: choisir au minimum 50 ms, voir classe zmsSerialPort pour plus d'infos)
 \\param rxFrameMaxLen Longueur maximale de la trame de réception
 \\param eofChar Caractère de fin de trame , typiquement EOT (0x04)
 \\return true si tout s'est bien passé, false en cas d'erreur"
      end

      operation 130562 "reOpen"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 4
	  param in name "portNumber" explicit_type "int"
	  param in name "byteTxWaitTime" explicit_type "int"
	  param in name "rxFrameMaxLen" explicit_type "uint"
	  param in name "eofChar" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ré-initialise la communication série en cas de changement de paramètre

 Ré-initialise la communication série en cas de changement de paramètre
 Cette méthode peut être appelée périodiquement. La ré-initialisation aura
 lieu si un des paramètre (au minimum) est différent d'un appel à l'autre.
 Voir open() pour les détails de fonctionnement de l'initialisation"
      end

      operation 130690 "close"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Termine la communication et libère les ressources

 Termine la communication et libère les ressources"
      end

      operation 130818 "send"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "frame" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Envois une tramme au ZMS

 Envois une tramme au ZMS. Prépare une trame d'envois, puis tilise la méthode zmsSerialPort::sendFrame()
 L'envois s'effectue alors dans un thread séparé, il faut alors consulter 
 périodiquement l'état d'envois avec la fonction zmsSerialPort::sendFrameEnd()
 Finalement, la méthode zmsSerialPort::sendFrameOk() permet de vérifier si l'envois à provoqué une erreur.

 \\param frame Chaine comportant les informations à envoyer
 \\return true en cas de succès, false sinon"
      end

      operation 130946 "receiveBegin"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Début de réception d'une trame
 Début de réception d'une trame. La trame de réception est préparée, puis transmise
 à zmsSerialPort . Les données sont récoltées dans un thread séparé, cette méthode retourne alors
 immédiatement. Il est alors nécessaire de consulter périodiquement l'avancement avec 
 zmsSerialPort::receiveFrameEnd() .

 Ici, le timeout est un temp durant lequel aucun byte n'est reçu. Pour exemple, on peut
 avoir un timeout de 2 [s] , mais une durée de réception de 10 [s], ce qui ne provoquera pas de timeout.

 \\param timeout Timeout de réception"
      end

      operation 131074 "receiveTerminate"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Phase finale de la réception d'une trame

 Phase finale de la réception d'une trame.
 On appelle cette fonction une fois que zmsSerialPort::receiveFrameEnd() à retourné true.
 La trame reçue sera alors vérifiée avec zmsFrame::isValid() , puis décodée.
 En cas de succès, la journalisation de la trame et des erreurs sera effectuée.

 La trame décodée peut être récupérée par la méthode RxFrame().
 Si le décodage de la trame a échoué, l'erreur ZMS_ERROR_FRAME_DECODE_FAIL est retournée.

 Pour obtenir la composition du train, il faut encore appeler explicitement la méthode computeTrainComposition(),
 puis récupérer le résultat avec trainComposition()

 \\return Une erreur listée dans zmsError.h (ZMS_NO_ERROR en cas de succès)"
      end

      operation 131202 "serialPortObj"
	preserve_cpp_body_indent public return_type class_ref 135298 // zmsSerialPort
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe de communication"
      end

      operation 131330 "RxFrame"
	preserve_cpp_body_indent public return_type class_ref 135426 // zmsDiagFrame
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne une instance de la trame de réception"
      end

      operation 131458 "computeTrainComposition"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Détermine la composition du train

Détermine la composition du train.

\\return 0 si ok, une erreur listée dans zmsError.h sinon"
      end

      operation 131586 "trainComposition"
	preserve_cpp_body_indent public return_type class_ref 135554 // zmsTrainComposition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne la composition du train

Retourne la composition du train.
Pour plus de détails, voir les classe zmsTrainComposition et zmsTrainVehicule"
      end

      operation 131714 "decodedFrame"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Trame sans espaces, CR,LF et autres séparateurs"
      end

      operation 131842 "receivedFrameStr"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne une chaine contenant la trame reçue
 Retourne une chaine contenant la trame reçue et décodée avec la méthode receive()

 \\return Chaine de la trame reçue"
      end

      operation 131970 "createDiagFrameLogFile"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le fichier pour la journalisation des trames de diagnostic

 Définit le fichier pour la journalisation des trames de diagnostic   *
 \\param filePath Chemin vers le fichier à créer
 \\return 0 si tout s'est bien passé ou une erreur listée dans zmsError.h en cas de problème"
      end

      operation 132098 "enableDiagFrameLog"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Active la fonction de journalisation des trames de diagnostic
 Lorsque la journalisation est active, la méthode receive() ajoutera les
 trames dans le fichier après décodage.

 \\param enable Si true, la journalisation devient active, inactive si false"
      end

      operation 132226 "openDiagFrameLogFile"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ouverture d'un fichier de journal en vue d'une relecture
 Ouverture d'un fichier de journal en vue d'une relecture.

\\param filePath Nom ou chemin du fichier à créer
\\return 0 si tout s'est bien passé ou une erreur listée dans zmsError.h en cas de problème"
      end

      operation 132354 "readDiagFrameLogLine"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Lecture d'une ligne du fichier journal
 Lecture d'une ligne du fichier journal

\\return True tant que la fin du fichier n'est pas atteinte"
      end

      operation 132482 "frameLog"
	preserve_cpp_body_indent public return_type class_ref 135682 // zmsFrameLog
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe de journalisation
 Instance de la classe de journalisation
\\return Instance de la classe de journalisation"
      end

      operation 132610 "zmsDeviceErrorObj"
	preserve_cpp_body_indent public return_type class_ref 135810 // zmsDeviceError
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe des erreur ZMS

\\return Instance de la classe des erreur ZMS"
      end

      operation 132738 "deviceErrorDisplayBufferObj"
	preserve_cpp_body_indent public return_type class_ref 135938 // zmsDisplayBuffer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe de tampon d0affichage des dernière erreurs ZMS

 \\return Instance de la classe e tampon d0affichage des dernière erreurs ZMS"
      end

      operation 132866 "enableDiagDeviceErrorLog"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Active la fonction de journalisation des erreurs ZMS
 Lorsque la journalisation est active, la méthode receive() ajoutera les
 errurs ZMS dans le fichier.

 \\param enable Si true, la journalisation devient active, inactive si false"
      end

      operation 132994 "zmsDeviceErrorLogObj"
	preserve_cpp_body_indent public return_type class_ref 136066 // zmsDeviceErrorLog
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe de log des erreur ZMS

 \\return Instance de la classe de log des erreur ZMS"
      end

      operation 133122 "enableHtmlReport"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Active la fonction de journalisation des erreurs ZMS pour le rapport HTML
 Lorsque la journalisation est active, la méthode receive() ajoutera les
 errurs ZMS dans le fichier html temporaire.

 \\param enable Si true, la journalisation devient active, inactive si false"
      end

      operation 133250 "htmlReportObj"
	preserve_cpp_body_indent public return_type class_ref 136194 // zmsHtmlReport
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Instance de la classe de rapport HTML

 \\return Instance de la classe de rapport HTML"
      end

      operation 133378 "zmsComm"
	private explicit_return_type ""
	nparams 1
	  param inout name "" type class_ref 135042 // zmsComm
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " On interdit la copie"
      end

      classrelation 128002 // pvSerialPort (<directional composition>)
	relation 128002 *-->
	  a role_name "pvSerialPort" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128002 // pvSerialPort (<directional composition>)
	  b parent class_ref 135298 // zmsSerialPort
      end

      classrelation 128130 // pvTxFrame (<directional composition>)
	relation 128130 *-->
	  a role_name "pvTxFrame" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128130 // pvTxFrame (<directional composition>)
	  b parent class_ref 136322 // zmsFrame
      end

      classrelation 128258 // pvRxFrame (<directional composition>)
	relation 128258 *-->
	  a role_name "pvRxFrame" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128258 // pvRxFrame (<directional composition>)
	  b parent class_ref 135426 // zmsDiagFrame
      end

      classrelation 128386 // pvTrainComposition (<directional composition>)
	relation 128386 *-->
	  a role_name "pvTrainComposition" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128386 // pvTrainComposition (<directional composition>)
	  b parent class_ref 135554 // zmsTrainComposition
      end

      attribute 135554 "pvDiagFrameLogEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Si true, les trames de diagnostic seront sauvegardées"
      end

      classrelation 128514 // pvFrameLog (<directional composition>)
	relation 128514 *-->
	  a role_name "pvFrameLog" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128514 // pvFrameLog (<directional composition>)
	  b parent class_ref 135682 // zmsFrameLog
      end

      classrelation 128642 // pvDeviceError (<directional composition>)
	relation 128642 *-->
	  a role_name "pvDeviceError" private
	    comment " Erreurs ZMS"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128642 // pvDeviceError (<directional composition>)
	  b parent class_ref 135810 // zmsDeviceError
      end

      classrelation 128770 // pvDeviceErrorDisplayBuffer (<directional composition>)
	relation 128770 *-->
	  a role_name "pvDeviceErrorDisplayBuffer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128770 // pvDeviceErrorDisplayBuffer (<directional composition>)
	  b parent class_ref 135938 // zmsDisplayBuffer
      end

      classrelation 128898 // pvDeviceErrorLog (<directional composition>)
	relation 128898 *-->
	  a role_name "pvDeviceErrorLog" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 128898 // pvDeviceErrorLog (<directional composition>)
	  b parent class_ref 136066 // zmsDeviceErrorLog
      end

      attribute 135682 "pvDeviceErrorLogEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 129026 // pvHtmlReport (<directional composition>)
	relation 129026 *-->
	  a role_name "pvHtmlReport" private
	    comment " Rapport HTML"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129026 // pvHtmlReport (<directional composition>)
	  b parent class_ref 136194 // zmsHtmlReport
      end

      attribute 135810 "pvHtmlReportEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 135938 "pvPortNumber"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attributs servant de mémoire pour la méthode reOpen()"
      end

      attribute 136066 "pvByteTxWaitTime"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 136194 "pvRxFrameMaxLen"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 136322 "pvEofChar"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 136450 "pvPortOpenOk"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 135170 "zms_error_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
Le numéros d'erreurs sont en correspondance avec celles
ajoutées dans LabView.
Voir le fichier zmspruef-errors.txt

 Type erreur zms "
      attribute 145282 "ZMS_NO_ERROR"
	public type class_ref 135170 // zms_error_t
	init_value " 0 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145410 "ZMS_ERROR_RX_TIMEOUT"
	public type class_ref 135170 // zms_error_t
	init_value " 5006 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145538 "ZMS_ERROR_RX_READ_FAIL"
	public type class_ref 135170 // zms_error_t
	init_value " 5008 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145666 "ZMS_ERROR_FRAME_DECODE_FAIL"
	public type class_ref 135170 // zms_error_t
	init_value " 5009 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145794 "ZMS_ERROR_RX_UNKNOW_FAILURE"
	public type class_ref 135170 // zms_error_t
	init_value " 5010 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145922 "ZMS_ERROR_MUTEX_FAILURE"
	public type class_ref 135170 // zms_error_t
	init_value " 5011 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146050 "ZMS_ERROR_COMP_FRM_NOT_ZST"
	public type class_ref 135170 // zms_error_t
	init_value " 5012 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146178 "ZMS_ERROR_RX_BUFFER_FULL"
	public type class_ref 135170 // zms_error_t
	init_value " 5013 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146306 "ZMS_ERROR_FILE_WRITE_FAIL"
	public type class_ref 135170 // zms_error_t
	init_value " 5016 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146434 "ZMS_ERROR_FILE_READ_FAIL"
	public type class_ref 135170 // zms_error_t
	init_value " 5017 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146562 "ZMS_ERROR_THREAD_FAILURE"
	public type class_ref 135170 // zms_error_t
	init_value " 5018 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146690 "ZMS_ERROR_TX_FAILURE"
	public type class_ref 135170 // zms_error_t
	init_value " 5019 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146818 "ZMS_ERROR_COMP_UNIT_VEHIC_MISS"
	public type class_ref 135170 // zms_error_t
	init_value " 5014 "
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 146946 "ZMS_ERROR_COMP_UNIT_UST_KPL00"
	public type class_ref 135170 // zms_error_t
	init_value " 5015      // Une unité esclave de la composition se retrouve avec aucun attelage occupé, ce qui est impossible
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 135298 "zmsSerialPort"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Classe de communication par port série avec le ZMS

 Classe de communication par port série avec le ZMS.
 Pour rester simple, seul un minimum d'options sont configurable,
 les paramètres requis pour communiquer avec le ZMS étants connus et ne
 changeant pas."
      classrelation 131330 // <generalisation>
	relation 131330 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 131330 // <generalisation>
	  b parent class_ref 137858 // zmsThread
      end

      operation 154626 "zmsSerialPort"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 154754 "~zmsSerialPort"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 154882 "open"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "portNumber" explicit_type "int"
	  param in name "byteTxWaitTime" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ouverture du port série

 Ouverture du port série
 Il est possible de spécifier un temps d'attente entre 2 Bytes en émission
 Plusieurs essais en labos ont amané à la conclusion que le ZMS supporte mal
 la transmission des octets d'un coup, et ce, malgré un contrôle de flux (Xon/Xoff)
 actif et fonctionnel. En effet, lors d'une transmission sans attente, le caractère
 Xoff n'est éventuellement émis que trop tard, voir pas du toût.
 Il s'est finalement avéré qu'un temps d'attente d'au moins 50 [ms] avant émission d'un Byte
 garantissait de bon résultats. Les essais ont été mené sous Windows XP, le temps d'attente
 étant simplement effectué avec l'instruction Sleep() de l'API système.
 Note: le 4 Août 2011, après essais avec 2 ZMS, 50 [ms] se sont avérés trops court, on estime que 100 [ms] est un minimum

 \\param portNumber No du port COM
 \\param byteTxWaitTime Temp d'attente entre 2 émissions d'un Byte [ms] (Conseillé: 100)
 \\return true si tout se passe bien, false en cas d'erreur"
      end

      operation 155010 "close"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Fermeture du port série

 Fermeture du port série"
      end

      operation 155138 "sendFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 136322 // zmsFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Envois d'une trame de données
 Envois d'une trame de données. Transmet la trame à un second thread,
 puis retourne immédiatement.
 Utiliser la méthode sendFrameEnd() pour savoir si la trame a été envoyée, puis sendFrameOk() pour vérifier
 qu'aucune erreur ne s'est produite.
 Attention: zmsFrame n'est pas thread safe, il faut donc attendre que la transmission soit terminée
           avant tout autre action sur l'instance frame passée en paramètre

 \\param frame Trame de données à envoyer"
      end

      operation 155266 "sendFrameEnd"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat d'envois de la trame
 Etat d'envois de la trame. A utiliser avec sendFrame()
 \\return True si la trame a complètement été envoyée"
      end

      operation 155394 "sendFrameOk"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Statut d'erreur de la trame envoyée
  Statut d'erreur de la trame envoyée. A utiliser avec sendFrame()
 \\return True en cas de succès, false sinon"
      end

      operation 155522 "receiveFrameBegin"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 136322 // zmsFrame
	  param in name "timeout" explicit_type "int"
	    defaultvalue "INFINITE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Début de réception d'une trame de données
 Début de réception d'une trame de données. Annonce au second thread que des données sont attendues,
 puis retourne immédiatement.
 Utiliser la méthode receiveFrameEnd() pour savoir si la trame a été reçue, puis zmsFrame::isValid() pour vérifier
 qu'aucune erreur ne s'est produite.
 Si un timeout est survenu, la trame sera invalide, et lastRxError() renverra ZMS_ERROR_RX_TIMEOUT
 Attention: zmsFrame n'est pas thread safe, il faut donc attendre que la transmission soit terminée
           avant tout autre action sur l'instance frame passée en paramètre

 \\param frame Trame de données
 \\param timeout Timeout avant réception d'au moins un byte"
      end

      operation 155650 "receiveFrameEnd"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat d'envois de la trame
 Etat d'envois de la trame. A utiliser avec receiveFrameBegin()
 \\return True si la trame a complètement été reçue"
      end

      operation 155778 "flushRx"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Vide le tampon de réception système

 Vide le tampon de réception système

 \\return true si tout se passe bien, false en cas d'erreur"
      end

      operation 155906 "flushTx"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Vide le tampon d'émission système

 Vide le tampon d'émission système

 \\return true si tout se passe bien, false en cas d'erreur"
      end

      operation 156034 "flushRxTx"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Vide les tampons d'émission et réception système

 Vide les tampons d'émission et réception système

 \\return true si tout se passe bien, false en cas d'erreur"
      end

      operation 156162 "writeByte"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "byte" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Envois d'un Byte"
      end

      operation 156290 "read"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "frame" type class_ref 136322 // zmsFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Lecture des données disponibles dans le tampon système"
      end

      operation 156418 "waitEvent"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param in name "eventMask" explicit_type "DWORD"
	  param in name "timeout" explicit_type "DWORD"
	    defaultvalue "INFINITE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Attend un évènement spécifié par eventMask"
      end

      operation 156546 "waitRxChar"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "timeout" explicit_type "int"
	    defaultvalue "INFINITE"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Attente de l'évènement d'arrivée d'un byte sur le port série"
      end

      operation 156674 "run1"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Thread d'émission

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Méthodes d'émission et réception exécutée dans 2 threads séparés"
      end

      operation 156802 "run2"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Thread de réception

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156930 "zmsSerialPort"
	private explicit_return_type ""
	nparams 1
	  param inout name "" type class_ref 135298 // zmsSerialPort
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " On interdit la copie"
      end

      attribute 151170 "pvSPhandle"
	private explicit_type "HANDLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Handle du port série"
      end

      attribute 151298 "pvDcb"
	private explicit_type "DCB"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Structure de configuration du port série"
      end

      attribute 151426 "pvComTimeouts"
	private explicit_type "COMMTIMEOUTS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Structure de configuration des timeouts"
      end

      attribute 151554 "pvByteTxWaitTime"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Temps d'attente entre l'émission de 2 Bytes"
      end

      attribute 151682 "pvRXbufferSize"
	private explicit_type "UINT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Taille du tampon de réception"
      end

      attribute 151810 "pvTXbufferSize"
	private explicit_type "UINT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Taille du tampon d'émission"
      end

      attribute 151938 "pvOverlapped"
	private explicit_type "OVERLAPPED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Structure contenant les informations pour les transferts asynchrones"
      end

      attribute 152066 "pvRxCpyBuffer"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Tampon temporaire utilisé pour les transferts avec ReadFile"
      end

      attribute 152194 "pvRXframeTimeout"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Timeout de réception"
      end

      classrelation 131458 // pvTXframe (<unidirectional association>)
	relation 131458 --->
	  a role_name "pvTXframe" private
	    comment " Trame de données à envoyer"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 131458 // pvTXframe (<unidirectional association>)
	  b parent class_ref 136322 // zmsFrame
      end

      classrelation 131586 // pvRXframe (<unidirectional association>)
	relation 131586 --->
	  a role_name "pvRXframe" private
	    comment " Trame de données à recevoir"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 131586 // pvRXframe (<unidirectional association>)
	  b parent class_ref 136322 // zmsFrame
      end
    end

    class 135426 "zmsDiagFrame"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Décode la trame de diagnostique renvoyée par le ZMS"
      classrelation 129794 // <generalisation>
	relation 129794 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129794 // <generalisation>
	  b parent class_ref 137218 // zmsResultFrame
      end

      class 137346 "zms_mode_t"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 137858 "UNKNOW"
	  public type class_ref 137346 // zms_mode_t
	  init_value "0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 137986 "ZLOK"
	  public type class_ref 137346 // zms_mode_t
	  init_value "0x01"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 138114 "STWG"
	  public type class_ref 137346 // zms_mode_t
	  init_value "0x02"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 138242 "ULOK"
	  public type class_ref 137346 // zms_mode_t
	  init_value "0x03"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 138370 "PASSIVBT"
	  public type class_ref 137346 // zms_mode_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 136578 "zmsDiagFrame"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 136706 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Efface les données internes et fixe les attributs à leur valeur par défaut"
      end

      operation 136834 "decode"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Décode la trame et stocke les flags

 Décode la trame et stocke les flags
 Si la trame contient 32 octets, et que la première
 adresse est 0xEEE0 , on est en présence d'une trame de
 diagnostic, et le décodage des 32 octets est effectuée,
 sinon, les valeurs sont le résultat donné par zmsResultFrame::decode()

 \\return True si tout s'est bien passé, false sinon"
      end

      operation 136962 "localDeviceAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse de la station locale (ZMS sur lequel on est connecté)"
      end

      operation 137090 "ustCount"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Nombre de sous-stations trouvée (Nbre de ZMS esclaves)"
      end

      operation 137218 "firstUstAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse de la 1ère sous-station trouvée"
      end

      operation 137346 "secondUstAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse de la 2e sous-station trouvée"
      end

      operation 137474 "thirdUstAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse de la 3e sous-station trouvée"
      end

      operation 137602 "fourthUstAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse de la 4e sous-station trouvée"
      end

      operation 137730 "couplingLocTrain1set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Loc de la rame 1 en place (occupé)"
      end

      operation 137858 "couplingBtTrain1set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Bt  de la rame 1 en place (occupé)"
      end

      operation 137986 "couplingLocTrain2set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Loc de la rame 2 en place (occupé)"
      end

      operation 138114 "couplingBtTrain2set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Bt  de la rame 2 en place (occupé)"
      end

      operation 138242 "couplingLocTrain3set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Loc de la rame 3 en place (occupé)"
      end

      operation 138370 "couplingBtTrain3set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Bt  de la rame 3 en place (occupé)"
      end

      operation 138498 "couplingLocTrain4set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Loc de la rame 4 en place (occupé)"
      end

      operation 138626 "couplingBtTrain4set"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Attelage Bt  de la rame 4 en place (occupé)"
      end

      operation 138754 "setDirectionSwitchToA"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ordre relais (de direction) pour direction A"
      end

      operation 138882 "bypassBus"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Bypass du bus (S2)"
      end

      operation 139010 "setTerminalResistor"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ordre de mise en place de la résistance de terminaison du bus"
      end

      operation 139138 "directionToMasterIsB"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Le master se trouve du côté B"
      end

      operation 139266 "zmsInitComplete"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Baptême du train terminé"
      end

      operation 139394 "modeBusEndOpen"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Mode d'exploitation extrémités du bus ouverts"
      end

      operation 139522 "masterSearchBeginDirectionB"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Direction dans laquelle le master doit commencer la recherche des sous-stations"
      end

      operation 139650 "considerMasterFunction"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Considérer la fonction master"
      end

      operation 139778 "runDataTransmission"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Authorisation à ZMS-NET pour les transmissions"
      end

      operation 139906 "zmsNetModeMaster"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief ZMS-NET en mode master"
      end

      operation 140034 "zmsNetProgramCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de programme ZMS-NET"
      end

      operation 140162 "micasMode"
	preserve_cpp_body_indent public return_type class_ref 137346 // zms_mode_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Mode d'exploitation MICAS (ZST, STW, UST)"
      end

      operation 140290 "micasProgramCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de programme MICAS"
      end

      operation 140418 "ust1TransmissionState"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat UST1 (0x00 = Ok)"
      end

      operation 140546 "ust1TransmissionCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de transmission UST1 (incrémenté à chaque trame reçue)"
      end

      operation 140674 "ust2TransmissionState"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat UST2 (0x00 = Ok)"
      end

      operation 140802 "ust2TransmissionCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de transmission UST2 (incrémenté à chaque trame reçue)"
      end

      operation 140930 "ust3TransmissionState"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat UST3 (0x00 = Ok)"
      end

      operation 141058 "ust3TransmissionCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de transmission UST3 (incrémenté à chaque trame reçue)"
      end

      operation 141186 "ust4TransmissionState"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat UST4 (0x00 = Ok)"
      end

      operation 141314 "ust4TransmissionCounterValue"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de transmission UST4 (incrémenté à chaque trame reçue)"
      end

      operation 141442 "fromMasterTransmissionCounter"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Compteur de trames venant du master , valable uniquement depuis une sous-station"
      end

      operation 141570 "couplingCriteriaFailure"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Critère d'attelage n'est pas ok"
      end

      operation 141698 "emergencyControlEnabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Commande de secour enclenchée"
      end

      operation 141826 "emergencyModeDiseabled"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Mode de secour déclenché"
      end

      operation 141954 "zmsNetBlockedBecauseFrontCoupling"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief ZMS-NET bloqué pour cause d'attelage frontal en cours"
      end

      operation 142082 "searchTimeout"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Temps de recherche écoulé"
      end

      operation 142210 "zmsInitRunning"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Baptême en cours"
      end

      operation 142338 "fullOutputAuthorized"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief L'activation complète est authorisée"
      end

      operation 142466 "coupligCriteriaOk"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Critère d'attelage OK"
      end

      operation 142594 "allDevicesProgramCounterRunning"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Les compteurs de toutes les sous-ststions trouvées sont actifs"
      end

      operation 142722 "transmissionOk"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Transmission OK"
      end

      operation 142850 "zmsInitOk"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Baptême terminé avec succès"
      end

      operation 142978 "zmsNetON"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief ZMS-NET ON"
      end

      attribute 138498 "pvLocalDeviceAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "zmsDiagFrame(zmsDiagFrame const &src);
 Word 1
 Adresse de la station locale (ZMS sur lequel on est connecté)"
      end

      attribute 138626 "pvUstCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Nombre de sous-stations trouvée (Nbre de ZMS esclaves)"
      end

      attribute 138754 "pvFirstUstAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 2
 Adresse de la 1ère sous-station trouvée"
      end

      attribute 138882 "pvSecondUstAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Adresse de la 2e sous-station trouvée"
      end

      attribute 139010 "pvThirdUstAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 3
 Adresse de la 3e sous-station trouvée"
      end

      attribute 139138 "pvFourthUstAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Adresse de la 4e sous-station trouvée"
      end

      attribute 139266 "pvCouplingLocTrain1set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 4
 Attelage Loc de la rame 1 en place (occupé)"
      end

      attribute 139394 "pvCouplingBtTrain1set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Bt  de la rame 1 en place (occupé)"
      end

      attribute 139522 "pvCouplingLocTrain2set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Loc de la rame 2 en place (occupé)"
      end

      attribute 139650 "pvCouplingBtTrain2set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Bt  de la rame 2 en place (occupé)"
      end

      attribute 139778 "pvCouplingLocTrain3set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 5
 Attelage Loc de la rame 3 en place (occupé)"
      end

      attribute 139906 "pvCouplingBtTrain3set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Bt  de la rame 3 en place (occupé)"
      end

      attribute 140034 "pvCouplingLocTrain4set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Loc de la rame 4 en place (occupé)"
      end

      attribute 140162 "pvCouplingBtTrain4set"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Attelage Bt  de la rame 4 en place (occupé)"
      end

      attribute 140290 "pvSetDirectionSwitchToA"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 6
 Ordre relais (de direction) pour direction A"
      end

      attribute 140418 "pvBypassBus"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bypass du bus (S2)"
      end

      attribute 140546 "pvSetTerminalResistor"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Ordre de mise en place de la résistance de terminaison du bus"
      end

      attribute 140674 "pvDirectionToMasterIsB"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Le master se trouve du côté B"
      end

      attribute 140802 "pvZmsInitComplete"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Baptême du train terminé"
      end

      attribute 140930 "pvModeBusEndOpen"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 6
 Mode d'exploitation extrémités du bus ouverts"
      end

      attribute 141058 "pvMasterSearchBeginDirectionB"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Direction dans laquelle le master doit commencer la recherche des sous-stations"
      end

      attribute 141186 "pvConsiderMasterFunction"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Considérer la fonction master"
      end

      attribute 141314 "pvRunDataTransmission"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Authorisation à ZMS-NET pour les transmissions"
      end

      attribute 141442 "pvZmsNetModeMaster"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 7
 ZMS-NET en mode master"
      end

      attribute 141570 "pvZmsNetProgramCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de programme ZMS-NET"
      end

      classrelation 129922 // pvMicasMode (<directional composition>)
	relation 129922 *-->
	  a role_name "pvMicasMode" private
	    comment " Word 8
 Mode d'exploitation MICAS (ZST, STW, UST)"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129922 // pvMicasMode (<directional composition>)
	  b parent class_ref 137346 // zms_mode_t
      end

      attribute 141698 "pvMicasProgramCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de programme MICAS"
      end

      attribute 141826 "pvUst1TransmissionState"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 9
 Etat UST1 (0x00 = Ok)"
      end

      attribute 141954 "pvUst1TransmissionCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de transmission UST1 (incrémenté à chaque trame reçue)"
      end

      attribute 142082 "pvUst2TransmissionState"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 10
 Etat UST2 (0x00 = Ok)"
      end

      attribute 142210 "pvUst2TransmissionCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de transmission UST2 (incrémenté à chaque trame reçue)"
      end

      attribute 142338 "pvUst3TransmissionState"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 11
 Etat UST3 (0x00 = Ok)"
      end

      attribute 142466 "pvUst3TransmissionCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de transmission UST3 (incrémenté à chaque trame reçue)"
      end

      attribute 142594 "pvUst4TransmissionState"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 12
 Etat UST4 (0x00 = Ok)"
      end

      attribute 142722 "pvUst4TransmissionCounterValue"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Compteur de transmission UST4 (incrémenté à chaque trame reçue)"
      end

      attribute 142850 "pvFromMasterTransmissionCounter"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 13
 Compteur de trames venant du master , valable uniquement depuis une sous-station"
      end

      attribute 142978 "pvCouplingCriteriaFailure"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 14
 Critère d'attelage en échec"
      end

      attribute 143106 "pvEmergencyControlEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Commande de secour enclenchée"
      end

      attribute 143234 "pvEmergencyModeDiseabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mode de secour déclenché"
      end

      attribute 143362 "pvZmsNetBlockedBecauseFrontCoupling"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ZMS-NET bloqué pour cause d'attelage frontal en cours"
      end

      attribute 143490 "pvSearchTimeout"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 15
 Temps de recherche écoulé"
      end

      attribute 143618 "pvZmsInitRunning"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Baptême en cours"
      end

      attribute 143746 "pvFullOutputAuthorized"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " L'activation complète est authorisée"
      end

      attribute 143874 "pvCoupligCriteriaOk"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Critère d'attelage OK"
      end

      attribute 144002 "pvAllDevicesProgramCounterRunning"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Word 16
 Les compteurs de toutes les sous-ststions trouvées sont actifs"
      end

      attribute 144130 "pvTransmissionOk"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Transmission OK"
      end

      attribute 144258 "pvZmsInitOk"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Baptême terminé avec succès"
      end

      attribute 144386 "pvZmsNetON"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ZMS-NET ON"
      end
    end

    class 135554 "zmsTrainComposition"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Reconnaissance de la composition du train

 Reconnaissance de la composition du train.
 Document de référence: GVT 7 550 732
"
      operation 158850 "zmsTrainComposition"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 158978 "~zmsTrainComposition"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 159106 "setZSTdiagFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "diagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition de la trame pour l'analyse

 Définition de la trame pour l'analyse.
"
      end

      operation 159234 "decode"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "runDiagFrameDecode" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Procède à la détection de la composition

 \\param runDiagFrameDecode Si true, la méthode décode de zmsDiagFrame est appelée avant traitement

 \\pre Une instance de trame valide doit avoir été définie (voir setDiagFrame() )"
      end

      operation 159362 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Efface la composition actuelle"
      end

      operation 159490 "unitAt"
	preserve_cpp_body_indent public return_type class_ref 137986 // zmsTrainCompositionUnit
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne l'unité à une position donnée

 Retourne l'unité à une position donnée.
 Si la position n'existe pas, un pointeur null est retourné.

 \\param Position Position de l'unité dans la composition
 \\return unité demandée, ou pointeur null"
      end

      operation 159618 "vehiculesCount"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Nombre de véhicules dans la composition"
      end

      operation 159746 "vehiculeAt"
	preserve_cpp_body_indent public return_type class_ref 138114 // zmsTrainVehicule
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le véhicule à une position donnée

 Retourne le véhicule à une position donnée.
 Si la position n'existe pas, un pointeur null est retourné.

 \\param Position Position du véhicule dans la composition
 \\return Véhicule demandé, ou pointeur null"
      end

      operation 159874 "toString"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 8
	  param in name "type" explicit_type "bool"
	  param in name "isZST" explicit_type "bool"
	  param in name "address" explicit_type "bool"
	  param in name "frontCoupling" explicit_type "bool"
	  param in name "btCoupling" explicit_type "bool"
	  param in name "direction" explicit_type "bool"
	  param in name "fieldSep" explicit_type "string"
	  param in name "vehiculeSep" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Composition du train sous forme de chaîne de caractère

 Composition du train sous forme de chaîne de caractère.
 Le sens de marche est toujours en direction droite ->

 \\param type Si true, le type de véhicule figure dans la chaîne
 \\param isZST Si true, le mode (ZST/UST) figure dans la chaîne
 \\param address Si true, l'adresse figure dans la chaîne
 \\param frontCoupling Si true, l'état de l'attelage frontal figure dans la chaîne
 \\param btCoupling Si true, l'état de l'attelage côté Bt figure dans la chaîne
 \\param direction Si true, le sens de marche des véhicules figure dans la chaîne (forme: N = Normal, I = Inversé)
 \\param fieldSep Définit le séparateur de champ pour les attributs d'un véhicule
 \\param vehiculeSep Définit le séparateur entre véhicule

 \\return La chaîne de caractères représentant la composition du train"
      end

      operation 160002 "unitNumberStr"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 1
	  param in name "sep" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Numéro des unités selon composition sous forme de chaîne de caractères

 Numéro des unités selon composition sous forme de chaîne de caractères.
 Avec le sens de marche standard, la forme sera:
 3;2;1;  (pour  UST,0x02;UST,0x01;ZST,0x20;  --> )
 ou:
 2;1;3;  (pour  UST,0x01;ZST,0x20;UST2,0x21  --> )
 etc

 \\param sep Définit le séparateur de champ entre unité

 \\return La chaîne de caractères représentant l'ordre des unités dans la composition du train"
      end

      operation 160130 "lastError"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief No de la dernière selon zmsError.h"
      end

      operation 160258 "formComposition"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Etape 1:
  - Formation de la composition en fonction des adresses des stations ZMS
  - Attribution de l'adresse respective à chaque véhicule
  - Attribution du type à chaque véhicule"
      end

      operation 160386 "setOtherAttributes"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Etape 2:
  - Définir les autres attributs pour chaque unité"
      end

      classrelation 131970 // pvZSTdiagFrame (<unidirectional association>)
	relation 131970 --->
	  a role_name "pvZSTdiagFrame" private
	    comment " Instance de la trame de diagnostic"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 131970 // pvZSTdiagFrame (<unidirectional association>)
	  b parent class_ref 135426 // zmsDiagFrame
      end

      classrelation 132098 // pvUnits (<unidirectional association>)
	relation 132098 --->
	  stereotype "deque"
	  a role_name "pvUnits" private
	    comment " Conteneur pour les unités du train
 Phylosphie de rangement:
 - La ZST représente l'avant (tête) de train
 - Les unités à l'arrière de la ZST sont ajoutée en début de liste avec push_front() (indices plus petits)
 - Les unités à l'avant de la ZST sont ajoutés en fin de liste avec push_back() (indices plus grand)
 Cette convension pouvant sembler illogique au premier abord facilite la relecture, car on obtiendra une composition
 ayant le sens de marche allan de gauche à droite en parcourant les unité de manipère croissante."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 132098 // pvUnits (<unidirectional association>)
	  b parent class_ref 137986 // zmsTrainCompositionUnit
      end

      classrelation 132226 // pvLastError (<directional composition>)
	relation 132226 *-->
	  a role_name "pvLastError" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 132226 // pvLastError (<directional composition>)
	  b parent class_ref 135170 // zms_error_t
      end
    end

    class 135682 "zmsFrameLog"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Stocke les trames ZMS dans un fichier CSV.
Stocke les trames ZMS dans un fichier CSV.
Le premier champ sera un timestamp au format AAAA-MM-JJ hh:mm:ss
Le séparateur utilisé est le ; (point-virgule)"
      classrelation 130434 // <generalisation>
	relation 130434 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 130434 // <generalisation>
	  b parent class_ref 137090 // zmsLog
      end

      operation 149122 "zmsFrameLog"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 149250 "~zmsFrameLog"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 149378 "addFrame"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param inout name "frame" type class_ref 135426 // zmsDiagFrame
	  param in name "timestamp" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute une trame au fichier
Ajoute une trame au fichier préalablement créé avec createFile()
Note: il faut que la trame ai été décodée au préalable.

\\param frame Instance de trame décodée
\\param timestamp Datation de la trame décodée
\\return True si ok, false en cas de problème"
      end

      operation 149506 "readLine"
	preserve_cpp_body_indent public return_type class_ref 135426 // zmsDiagFrame
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Lecture d'une ligne du fichier journal
 Lecture d'une ligne du fichier journal

\\return La trame de diagnostic représentant la ligne lue."
      end

      operation 149634 "frameHasChanged"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "frame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Vérifie si la trame courante à changé par rapport à la précédente"
      end

      classrelation 130562 // pvPreviousFrame (<directional composition>)
	relation 130562 *-->
	  a role_name "pvPreviousFrame" private
	    comment " Trame de diagnostique précédente"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 130562 // pvPreviousFrame (<directional composition>)
	  b parent class_ref 135426 // zmsDiagFrame
      end

      classrelation 130690 // pvReadFrame (<directional composition>)
	relation 130690 *-->
	  a role_name "pvReadFrame" private
	    comment " Trame de diagnostic utilisée pour le décodage lors de la relecture du fichier de journal"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 130690 // pvReadFrame (<directional composition>)
	  b parent class_ref 135426 // zmsDiagFrame
      end
    end

    class 135810 "zmsDeviceError"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Détermine l'état du ZMS"
      classrelation 129410 // <generalisation>
	relation 129410 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129410 // <generalisation>
	  b parent class_ref 136834 // zmsError
      end

      class 136962 "zms_state_t"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 136706 "ZMS_STATE_INIT"
	  public type class_ref 136962 // zms_state_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 136834 "ZMS_STATE_ERROR"
	  public type class_ref 136962 // zms_state_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 136962 "ZMS_STATE_OK"
	  public type class_ref 136962 // zms_state_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 134914 "zmsDeviceError"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 135042 "~zmsDeviceError"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 135170 "setDiagFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "diagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit la trame à traiter
 Définit la trame à traiter et stocke la liste des erreurs
 Note: la trame doit avour été décodée au préalable

 \\param diagFrame Trame à analyser"
      end

      operation 135298 "errorList"
	preserve_cpp_body_indent public explicit_return_type "vector<int>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne la liste des erreurs"
      end

      operation 135426 "csvErrorList"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne la liste des erreurs sous format CVS
 Note: il faut explicitement appeler setCsvErrorList()
       afin que la chaine CSV soit générée"
      end

      operation 135554 "htmlErrorList"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne la liste des erreurs sous format HTML"
      end

      operation 135682 "errorOccurred"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat d'erreur
 Etat d'erreur. L'état reste mémorisé, et peut être quitancée
 avec la méthode resetErrorState()
\\return True si une erreur est survenue"
      end

      operation 135810 "resetErrorState"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Reset de l'état d'erreur
 Reset de l'état d'erreur. Voir errorOccurred()"
      end

      operation 135938 "initRunning"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Initialisation du ZMS en cour
 Retourne la chaine dans la langue paramétrée. P.ex, pour l'allemand, si
 le ZMS annonce qu'il est encore en phase d'initialisation,
 le retour vaudra \"Ja\""
      end

      operation 136066 "setCsvErrorList"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "timestamp" explicit_type "string"
	  param in name "separator" explicit_type "string"
	    defaultvalue "\"\\t\""
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Génère la chaine des erreurs au format CSV"
      end

      operation 136194 "setHtmlErrorList"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "timestamp" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Génère la chaine des erreurs au format HTML"
      end

      classrelation 129538 // pvDiagFrame (<unidirectional association>)
	relation 129538 --->
	  a role_name "pvDiagFrame" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129538 // pvDiagFrame (<unidirectional association>)
	  b parent class_ref 135426 // zmsDiagFrame
      end

      attribute 137090 "pvErrorNumberList"
	private explicit_type "int"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Liste des erreurs trouvées"
      end

      attribute 137218 "pvLanguage"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Langue à utiliser pour les textes d'erreur"
      end

      attribute 137346 "pvErrorOccurred"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Est true si une erreur est survenue"
      end

      attribute 137474 "pvCsvErrorList"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Liste des erreurs au format CSV"
      end

      attribute 137602 "pvHtmlErrorList"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Liste des erreurs au format HTML"
      end

      attribute 137730 "pvInitRunning"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initialisation du ZMS en cours"
      end
    end

    class 135938 "zmsDisplayBuffer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 144130 "zmsDisplayBuffer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 144258 "~zmsDisplayBuffer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 144386 "init"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Initialisation du tampon
 Fixe la capacité du tampon

 \\param size Capacité du tampon [nombre d'éléments]"
      end

      operation 144514 "setHeader"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "header" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Définition d'une entête
 L'entête sera en début de chaine displayData()

 \\param header Entête"
      end

      operation 144642 "append"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute un élément à la file
 Si le tampon est plein, un ancien élément sera retiré

 \\param data Elément à ajouter"
      end

      operation 144770 "full"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Déterminer si le tampon est plein

 \\return True si le tampon est plein"
      end

      operation 144898 "displayData"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Chaine sur la partie affichable"
      end

      attribute 144898 "pvBuffer"
	private explicit_type "string"
	stereotype "deque"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145026 "pvCapacity"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 145154 "pvHeader"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 136066 "zmsDeviceErrorLog"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 129666 // <generalisation>
	relation 129666 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129666 // <generalisation>
	  b parent class_ref 137090 // zmsLog
      end

      operation 136322 "zmsDeviceErrorLog"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 136450 "addError"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "deviceError" type class_ref 135810 // zmsDeviceError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute un set d'erreurs au fichier
Ajoute un set d'erreurs au fichier préalablement créé avec createFile()

\\param deviceError Instance d'objet d'erreurs ZMS
\\return True si ok, false en cas de problème"
      end
    end

    class 136194 "zmsHtmlReport"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 149762 "zmsHtmlReport"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Constructeur"
      end

      operation 149890 "~zmsHtmlReport"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 150018 "setWorkDirectory"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "workDirectory" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le répertoire pour les fichiers temporaires"
      end

      operation 150146 "setLanguage"
	public explicit_return_type "void"
	nparams 1
	  param in name "language" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition du language: DE, FR ou EN

 Note: Seul l'allemand (DE) est supporté pour le moment.
       L'utilisation d'une autre langue entrainera des incohérences"
      end

      operation 150274 "setOperatorId"
	public explicit_return_type "void"
	nparams 1
	  param in name "operatorId" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition du user ID"
      end

      operation 150402 "setPlace"
	public explicit_return_type "void"
	nparams 1
	  param in name "place" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition de l'emplacement

 L'emplacement peut être Yverdon, dépôt, etc.."
      end

      operation 150530 "setUicNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "uicNumber" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition du numéro UIC du véhicule"
      end

      operation 150658 "setVehiculeType"
	public explicit_return_type "void"
	nparams 1
	  param in name "vehiculeType" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition du type de véhicule"
      end

      operation 150786 "setZmsSerialNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "zmsSerialNumber" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition du numéro de série du ZMS"
      end

      operation 150914 "setRemarks"
	public explicit_return_type "void"
	nparams 1
	  param in name "remarks" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définition des remarques"
      end

      operation 151042 "addError"
	public explicit_return_type "bool"
	nparams 2
	  param inout name "deviceError" type class_ref 135810 // zmsDeviceError
	  param in name "timestamp" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute un set d'erreurs au fichier temporaire

\\param deviceError Instance d'objet d'erreurs ZMS
\\param timestamp Datation de la trame décodée
\\return True si ok, false en cas de problème"
      end

      operation 151170 "save"
	public explicit_return_type "bool"
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Génère et sauve le rapport html

 \\param filePath Chemin du fichier de rapport"
      end

      operation 151298 "header"
	private explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Entête au format html"
      end

      operation 151426 "trimmedString"
	private explicit_return_type "string"
	nparams 1
	  param inout name "str" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Supprime les espace de début et fin de chaîne"
      end

      operation 151554 "convertToUtf8"
	private explicit_return_type "string"
	nparams 1
	  param in name "str" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Conversion des chaînes en UTF-8"
      end

      classrelation 130818 // pvErrorText (<directional composition>)
	relation 130818 *-->
	  a role_name "pvErrorText" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 130818 // pvErrorText (<directional composition>)
	  b parent class_ref 136834 // zmsError
      end

      attribute 148354 "pvUicNumber"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148482 "pvVehiculeType"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148610 "pvZmsSerialNumber"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148738 "pvLanguage"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148866 "pvDate"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148994 "pvMicasVersion"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 149122 "pvOperatorId"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 149250 "pvPlace"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 149378 "pvRemarks"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 149506 "pvZmspruefVersion"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 149634 "pvErrorListFile"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fichier temporaire contenant les erreurs"
      end
    end

    class 136322 "zmsFrame"
      visibility package 
      nactuals 1
      actual class class_ref 134914 // mdtBuffer
        rank 0 explicit_value "char"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Représente une trame ZMS

 Représente une trame ZMS
 Cette classe ne comporte pas de propriété réelle d'une trame ZMS,
 il s'agit uniquement d'une série de caractères terminés par un EOT (ou autre caractère passé au constructeur)
 Conseil d'utilisation:
  On initialise l'instance avec une taille correspondant à la plus longue trame qu'il
  est possible de rencontrer. Si l'instance est pleine, mais que le caractère de fin de trame
  n'a pas été atteint, on rejette simplement la trame.
  Voir les méthode isComplete(), isValid() et bytesToRead() pour ces tests"
      classrelation 130306 // <realization>
	relation 130306 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 130306 // <realization>
	  b parent class_ref 134914 // mdtBuffer
      end

      operation 147202 "zmsFrame"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "eof" explicit_type "char"
	    defaultvalue "EOT"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 147330 "zmsFrame"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 136322 // zmsFrame
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}
 : zmsBuffer<char>(src)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 147458 "operator ="
	preserve_cpp_body_indent public return_type class_ref 136322 // zmsFrame
	nparams 1
	  param inout name "src" type class_ref 136322 // zmsFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147586 "~zmsFrame"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 147714 "init"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "size" explicit_type "size_t"
	  param in name "eofChar" explicit_type "char"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147842 "putStr"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "str" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute une chaine de caractères au tampon

 Ajoute une chaine de caractères au tampon.

 \\param str Pointeur vers une chaine valide (terminé par un caractère null)

 \\return true si la chaine entière à été stockée, false sinon"
      end

      operation 147970 "append"
	preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 3
	  param in name "data" explicit_type "char"
	  param in name "len" explicit_type "size_t"
	  param in name "IgnoreNullChars" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute len données au tampon

 Ajoute len données au tampon, ou jusqu'à l'arrivée de l'élément de fin de trame

 \\param data Pointeur sur les données source
 \\param len  Nombre de caractères (Bytes) à stocker
 \\param IgnoreNullChars Si true, les caractères null ('\\0') ne seront pas stockés

 \\return Le nombre de caractères (Bytes) réellement stockés"
      end

      operation 148098 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Efface les données et réinitialise les flags
"
      end

      operation 148226 "bytesToRead"
	preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Nombre de bytes qu'il reste à lire

 Nombre de bytes qu'il reste à lire (à fournir au buffer pour éventuellement terminer une trame)
 Retourne 0 si la trame est complète, ou le nombre d'élément qu'il est encore possible de stocker sinon"
      end

      operation 148354 "getStr"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne un pointeur sur une copie de la trame interne

 Retourne un pointeur sur une copie de la trame interne
 Les quantités (disponible, stockable, ...) , ainsi que les flags
 ne sont pas altérés.

 \\return Pointeur sur une copie de la trame interne"
      end

      operation 148482 "takeStr"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne un pointeur sur une copie de la trame interne

 Retourne un pointeur sur une copie de la trame interne
 Après cet appel la trame sera vide, incomplète et invalide.

 \\return Pointeur sur une copie de la trame interne"
      end

      operation 148610 "isComplete"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne true pour une trame complète

 Retourne true pour une trame complète.
 Une trame est complète si:
  - L'élément de fin de trame a été atteint
  - Le buffer est plein (éventuellement, l'élément de fin de trame n'a pas été atteint)
 Utiliser isValid() pour savoir si la trame est réellement complète.

 \\return True pour une trame complète"
      end

      operation 148738 "isValid"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne true pour une trame complète avec caractère de fin de trame

 Retourne true pour une trame complète avec caractère de fin de trame.

 \\return True pour une trame valide"
      end

      operation 148866 "eofChar"
	preserve_cpp_body_indent public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Caractère de find de trame"
      end

      operation 148994 "appendCR"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute le caractère CR (0x0D) en fin de trame

 Ajoute le caractère CR (0x0D) en fin de trame

 \\return true si tout se passe bien, false en cas d'erreur (cause probable: manque de place dans la trame)"
      end

      attribute 147842 "pvEOFchar"
	protected explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 147970 "pvFrame"
	protected explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148098 "pvIsComplete"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 148226 "pvIsValid"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 136450 "zmsCsvFile"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief"
      classrelation 129154 // <generalisation>
	relation 129154 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129154 // <generalisation>
	  b parent class_ref 136578 // zmsFile
      end

      operation 133506 "zmsCsvFile"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 133634 "~zmsCsvFile"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 133762 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief"
      end

      operation 133890 "readLines"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "fieldSeparator" explicit_type "char"
	    defaultvalue "';'"
	  param in name "dataProtectCar" explicit_type "char"
	    defaultvalue "'\"'"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Lis le fichier CSV est stocke les lignes

Lis le fichier CSV est stocke les lignes

\\param fieldSeparator
\\param dataProtectCar
\\return True si le fichier à pu re lu, false sinon"
      end

      operation 134018 "valueAt"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 2
	  param in name "line" explicit_type "int"
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Valeur pour un index de champ donné

Valeur pour un champ donné. Si l'index donné en paramètre
n'existe pas, une chaine vide est retournée

\\param line Ligne du champ
\\param column Colonne du champ
\\return Valeur à l'index, ou une chaine vide"
      end

      operation 134146 "lines"
	preserve_cpp_body_indent public explicit_return_type "vector<zmsCsvFileLine*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Liste des lignes stockées"
      end

      classrelation 129282 // pvLines (<unidirectional association>)
	relation 129282 --->
	  stereotype "vector"
	  a role_name "pvLines" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 129282 // pvLines (<unidirectional association>)
	  b parent class_ref 136706 // zmsCsvFileLine
      end
    end

    class 136578 "zmsFile"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Gestion des fichiers"
      operation 146050 "zmsFile"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 146178 "~zmsFile"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 146306 "openRd"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ouverture d'un fichier en lecture

Ouverture d'un fichier en lecture. Si le chemin passé en paramètre est null,
le chemin mémorisé sera utilisé

\\param filePath Chemin vers le fichier à lire
\\return True si l'ouvrture est possible, false sinon"
      end

      operation 146434 "openWr"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "filePath" explicit_type "string"
	  param in name "append" explicit_type "bool"
	  param in name "openExisting" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ouverture d'un fichier en écriture

Ouverture d'un fichier en écriture. Si le chemin passé en paramètre est null,
le chemin mémorisé sera utilisé

\\param filePath Chemin vers le fichier à lire
\\param append Ajout en fin de fichier si true, sinon, le fichier sera écrasé
\\param openExisting Si true, le fichier sera édité si existant. Sinon, l'ouverture échouera pour un fichier déjà existant
\\return True si l'ouvrture est possible, false sinon"
      end

      operation 146562 "close"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Fermeture du fichier"
      end

      operation 146690 "isOpenRd"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Etat du flux de lecture"
      end

      operation 146818 "rdFilePath"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Chemin définit en lecture"
      end

      operation 146946 "rdStream"
	preserve_cpp_body_indent public explicit_return_type "ifstream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Accès au flux en lecture"
      end

      operation 147074 "wrStream"
	preserve_cpp_body_indent public explicit_return_type "ofstream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Accès au flux en écriture"
      end

      attribute 147330 "pvRdStream"
	protected explicit_type "ifstream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 147458 "pvWrStream"
	protected explicit_type "ofstream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 147586 "pvRdPath"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 147714 "pvWrPath"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 136706 "zmsCsvFileLine"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief"
      operation 134274 "zmsCsvFileLine"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 134402 "~zmsCsvFileLine"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 134530 "setLine"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "line" explicit_type "string"
	  param in name "fieldSeparator" explicit_type "char"
	  param in name "dataProtectCar" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief"
      end

      operation 134658 "valueAt"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Valeur pour un index de champ donné

Valeur pour un champ donné. Si l'index donné en paramètre
n'existe pas, une chaine vide est retournée

\\param column Index du champ
\\return Valeur à l'index, ou une chaine vide"
      end

      operation 134786 "fields"
	preserve_cpp_body_indent public explicit_return_type "vector<string>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief"
      end

      attribute 136578 "pvFields"
	private explicit_type "string"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 136834 "zmsError"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Pas d'erreur 
 Pas d'erreur
 Erreurs de communication série 
 Timeout lors de la réception depuis le port série
 La méthode read() a échoué
 Le décodage de la trame a échoué
 Erreur de réception non gérée
 Erreur avec un verrou: mutex non/mal initialisé, erreur de prise ou relachement
 La trame de diagnostic reçue ne provient pas de la ZST, le décodage de la composition ne peut pas se faire
 Durant la réception, le nombre maximal de données attendu à été atteint sans jamais recevoir le caractère terminal
 L'ouverture d'un fichier en écriture à échoué
 L'ouverture d'un fichier en lecture à échoué
 Erreur lors de la création ou démarrage d'un thread
 Erreur d'envois
 Erreurs d'incohérences dans la composition du train 
 Il manque un véhicule dans une unité
 Une unité esclave de la composition se retrouve avec aucun attelage occupé, ce qui est impossible
 enum zms_error_t
! \\brief Classe de gestion des erreurs"
      operation 145026 "zmsError"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 145154 "~zmsError"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 145282 "loadFile"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "filePath" explicit_type "string"
	  param in name "fieldSeparator" explicit_type "char"
	    defaultvalue "';'"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Charge le fichier d'erreurs

Charge le fichier d'erreurs. Un fichier
d'erreurs est de la forme d'un CSV simple:
 No;Langue;Texte

\\param filePath Fichier d'erreurs à lire
\\param fieldSeparator Séparateur de champ à utiliser
\\return True en cas de succès, false sinon"
      end

      operation 145410 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Efface les attributs d'erreurs

Efface les attributs d'erreurs"
      end

      operation 145538 "text"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 2
	  param in name "errorNumber" explicit_type "int"
	  param in name "language" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Texte d'une erreur

 Texte d'une erreur

\\param errorNumber Numéro d'erreur
\\param language Language
\\return Le texte associé au numéro d'erreur ou à la langue spécifiée, ou une chaine vide"
      end

      classrelation 130178 // pvAttributes (<unidirectional association>)
	relation 130178 --->
	  stereotype "multimap"
	  a role_name "pvAttributes" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<int,${type}*> ${name}${value};
"
	    classrelation_ref 130178 // pvAttributes (<unidirectional association>)
	  b parent class_ref 137602 // zmsErrorAttribute
      end
    end

    class 137090 "zmsLog"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Classe foournissant les méthode de journalisation
Classe foournissant les méthode de journalisation
Le premier champ sera un timestamp au format AAAA-MM-JJ hh:mm:ss
Le séparateur utilisé est le ; (point-virgule)"
      classrelation 130946 // <generalisation>
	relation 130946 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 130946 // <generalisation>
	  b parent class_ref 136450 // zmsCsvFile
      end

      operation 151682 "zmsLog"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 151810 "createFile"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Cré un nouveau fichier
Si le fichier existe déjà, les données seront ajoutées
à la fin de ce dernier, sans demande de confirmation.
Sinon, les entêtes seront aussi ajoutées au fichier créé.

\\param filePath Nom ou chemin du fichier à créer
\\return True en cas de succès, false sinon"
      end

      operation 151938 "addData"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 4
	  param in name "data" explicit_type "string"
	  param in name "addEndl" explicit_type "bool"
	    defaultvalue "true"
	  param in name "addTimeStamp" explicit_type "bool"
	    defaultvalue "true"
	  param in name "timestamp" explicit_type "string"
	    defaultvalue "string(\"\")"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute des données au fichier
Ajoute des données au fichier préalablement créé avec createFile()
Note: il faut que la trame ai été décodée au préalable.

\\param frame Instance de trame décodée
\\param addEndl Ajout du caractère de fin de ligne
\\param addTimeStamp Ajout du timestamp
\\param timestamp Datation (timestamp)
\\return True si ok, false en cas de problème"
      end

      operation 152066 "openFile"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ouverture d'un fichier de journal en vue d'une relecture
 Ouverture d'un fichier de journal en vue d'une relecture.

\\param filePath Nom ou chemin du fichier à ouvrir
\\return True en cas de succès, false sinon"
      end

      operation 152194 "readLine"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Lecture d'une ligne du fichier journal
 Lecture d'une ligne du fichier journal.

\\return Une liste de chaines représentant la ligne lue"
      end

      operation 152322 "lastReadenTimestamp"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Date heure contenue dans la dernière ligne lue
 Date heure contenue dans la dernière ligne lue

\\return Date et heure si trouvé, une chaine vide sinon"
      end

      operation 152450 "endOfFile"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Statut lors de la lecture du fichier journal
 Statut losr de la lecture du fichier journal

\\return True si la fin du fichier a été atteint"
      end

      operation 152578 "getTimestamp"
	class_operation preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne la et l'heure système"
      end

      attribute 149762 "pvHeader"
	protected explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Ligne d'entête du fichier"
      end

      attribute 149890 "pvLastReadenTimestamp"
	protected explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Date et heure de la dernière trame lue du fichier journal"
      end

      attribute 150018 "pvCurrentLine"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Pointeur de ligne utilisé lors de la relecture"
      end
    end

    class 137218 "zmsResultFrame"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Décode une trame ZMS et stocke les attributs trouvés
"
      classrelation 131074 // <generalisation>
	relation 131074 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 131074 // <generalisation>
	  b parent class_ref 136322 // zmsFrame
      end

      class 137730 "type_t"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 150146 "UNKNOW_FRAME"
	  public type class_ref 137730 // type_t
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 150274 "ERROR_FRAME"
	  public type class_ref 137730 // type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 150402 "INFO_FRAME"
	  public type class_ref 137730 // type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 150530 "RESULT_FRAME"
	  public type class_ref 137730 // type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 150658 "DIAG_FRAME"
	  public type class_ref 137730 // type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 152706 "zmsResultFrame"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 152834 "decode"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Décode le contenu de la trame

 Décode le contenu de la trame
 Note: après récupération des données, il faut 
       explicitement appeler la méthode clear()
       avant réception et décodage d'une nouvelle trame.

 \\return true si tout s'est bien passé, false en cas d'erreur"
      end

      operation 152962 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Efface les données décodées ainsi que la trame brut

 Efface les données décodées ainsi que la trame brut.
"
      end

      operation 153090 "decodedFrame"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Retourne la trame décodée

 Retourne la trame décodée

 \\return La trame décodée sous form de chaine"
      end

      operation 153218 "type"
	preserve_cpp_body_indent public return_type class_ref 137730 // type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief  Retourne le type de la trame

 Retourne le type de la trame

 \\return Le type de la trame"
      end

      operation 153346 "deviceError"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief No d'erreur retourné par le ZMS

 No d'erreur retourné par le ZMS

 \\return No d'erreur retourné par le ZMS"
      end

      operation 153474 "availableValues"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Nombre de valeurs disponibles

 Nombre de valeurs disponibles

 \\return Nombre de valeurs disponibles"
      end

      operation 153602 "firstAddress"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Addresse de la première valeur

 Addresse de la première valeur

 \\return Addresse de la première valeur, ou -1 en cas d'erreur"
      end

      operation 153730 "valueAt"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "address" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Valeur pour une adresse donnée

 Valeur pour une adresse donnée

 \\param address Adresse pour laquelle on demande la valeur

 \\return Valeur pour l'adresse donnée, ou -1"
      end

      operation 153858 "removeChar"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 5
	  param in name "atBegin" explicit_type "bool"
	  param in name "atMiddle" explicit_type "bool"
	  param in name "atEnd" explicit_type "bool"
	  param inout name "str" explicit_type "string"
	  param in name "r" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} & ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Supprime le caractère spécifié dans la chaine passée en paramètre"
      end

      operation 153986 "removeSpaces"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "atBegin" explicit_type "bool"
	  param in name "atMiddle" explicit_type "bool"
	  param in name "atEnd" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Supprime les espaces , agit sur la trame (instance de cette classe)"
      end

      operation 154114 "removeEOFchar"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "str" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Supprime le caractère de fin de trame dans la chaine passée en paramètre"
      end

      operation 154242 "removeEOFchar"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Supprime le caractère de fin de trame , agit directement sur la trame"
      end

      operation 154370 "decodeValues"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "str" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Aides pour cette méthode: http://www.cplusplus.com/reference/iostream/stringstream/

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Décode les valeurs reçues"
      end

      operation 154498 "storeValues"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "startAddress" explicit_type "string"
	  param in name "values" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Convertit et stoque les valeurs"
      end

      classrelation 131202 // pvType (<directional composition>)
	relation 131202 *-->
	  a role_name "pvType" protected
	    comment " Type de la trame actuelle"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 131202 // pvType (<directional composition>)
	  b parent class_ref 137730 // type_t
      end

      attribute 150786 "pvDeviceError"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Numéro d'erreur retourné par le ZMS"
      end

      attribute 150914 "pvValues"
	protected explicit_type "int,int"
	stereotype "map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Valeurs: la clé de la map est l'adresse ( <adresse,valeur> )"
      end

      attribute 151042 "pvDecodedFrame"
	protected explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Trame décodée"
      end
    end

    class 137474 "zmsDiagFrameCsv"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Encode les résultats d'une trame de diagnostic en chaine CSV

 Encode les résultats d'une trame de diagnostic en chaine CSV
 Par défaut, le séparateur de champ (colonne) est le caractère ; (comma),
 et la séquence de retour à la ligne le caractère \\<CR>.
 Il est possible de changer ceux-ci avec les méthodes setFieldSeparator()
 et setEndlineSequence()"
      operation 143106 "zmsDiagFrameCsv"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 143234 "setFrame"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Trame à traiter"
      end

      operation 143362 "genCsv"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// NOTE: avec le flux, si on demande hex, redemander dec après ..

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Générer le CSV

 Générer le CSV
 Veiller à ce que le décodage de la trame ai déjà été décodée (voir zmsDiagFrame::decode() )

 \\return Chaine contenant le CSV généré

 \\pre Une instance de trame valable doit avoir été définie, voir setFrame()"
      end

      operation 143490 "timestamp"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne un timestamp au format YYYY-MM-DD hh:mm:ss"
      end

      operation 143618 "setFieldSeparator"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "sep" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 143746 "setEndlineSequence"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "seq" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 143874 "writeToFile"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "filePath" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ecrire les résultats dans un fichier
"
      end

      operation 144002 "boolToStr"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 1
	  param in name "val" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 130050 // pvFrame (<unidirectional association>)
	relation 130050 --->
	  a role_name "pvFrame" private
	    comment " Instance de la trame de diagnostic"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130050 // pvFrame (<unidirectional association>)
	  b parent class_ref 135426 // zmsDiagFrame
      end

      attribute 144514 "pvFldSep"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Séparateur de champ"
      end

      attribute 144642 "pvEndlSeq"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Séquence de fin de ligne"
      end

      attribute 144770 "pvStream"
	private explicit_type "stringstream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flux"
      end
    end

    class 137602 "zmsErrorAttribute"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Classe de gestion des attributs d'une erreur"
      operation 145666 "zmsErrorAttribute"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "number" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Création d'une entrée pour un numéro d'erreur donné

 Création d'une entrée pour un numéro d'erreur donné
 \\param number Numéro d'erreur"
      end

      operation 145794 "addText"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "language" explicit_type "string"
	  param in name "text" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajout d'un texte pour une langue données

 Ajout d'un texte pour une langue données
 \\param language Language du texte d'erreur
 \\param text Texte d'erreur pour la langue donnée"
      end

      operation 145922 "text"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 1
	  param in name "language" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Text pour une langue donnée

Text pour une langue donnée

\\param language Langue du texte recherché
\\return Le texte de la langue demandée, ou une chaine vide si non trouvé"
      end

      attribute 147074 "pvNumber"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 147202 "pvTexts"
	private explicit_type "string,string"
	stereotype "map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 137858 "zmsThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Permet l'exécution de deux threads
 Permet l'exécution de deux threads. Est utile lorsque 2 threads, 
 ainsi que le thread principal, doivent accéder à des ressources communes."
      operation 157058 "zmsThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 157186 "~zmsThread"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 157314 "start"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Démarrage des threads
 Démarrage des threads
 \\return false en cas d'erreur de création ou démarrage du second thread"
      end

      operation 157442 "stop"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Arrêt des threads
 Arrêt des threads"
      end

      operation 157570 "lastTxError"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le No de la dernière erreur d'émission

 Retourne le No de la dernière erreur d'émission
 Utilise les erreurs définies dans zmsError.h
 Voir aussi lastWinAPIeror()"
      end

      operation 157698 "lastRxError"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le No de la dernière erreur de réception

 Retourne le No de la dernière erreur de réception
 Utilise les erreurs définies dans zmsError.h
 Voir aussi lastWinAPIeror()"
      end

      operation 157826 "lastWinAPIerror"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le No de la dernière retournée par l'API Windows

 Retourne le No de la dernière retournée par l'API Windows"
      end

      operation 157954 "run1"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Fonction appelée dans un thread séparé
 Fonction appelée dans un thread.séparé
 Dans la classe héritée de zmsThread il faut
 ré-implémenter cette méthode. Un flag d'errêt
 est positionné lors de l'appel de la méthode
 stop() . Il est conseillé d'utiliser la méthode endThread()
 pour le consulter."
      end

      operation 158082 "run2"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 158210 "lockMutex"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 158338 "unlockMutex"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 158466 "endThread"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Retourne true si la méthode stop() à demandé l'arrêt des threads"
      end

      operation 158594 "storeError"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Stocke le numéro d'erreur données par GetLastError() ainsi que le texte associé"
      end

      classrelation 131714 // pvLastTxError (<directional composition>)
	relation 131714 *-->
	  a role_name "pvLastTxError" protected
	    comment " Dernière erreur d'émission"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 131714 // pvLastTxError (<directional composition>)
	  b parent class_ref 135170 // zms_error_t
      end

      classrelation 131842 // pvLastRxError (<directional composition>)
	relation 131842 *-->
	  a role_name "pvLastRxError" protected
	    comment " Dernière erreur de réception"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 131842 // pvLastRxError (<directional composition>)
	  b parent class_ref 135170 // zms_error_t
      end

      attribute 152322 "pvLastWinAPIerrorNum"
	protected explicit_type "DWORD"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Numéro de la dernière erreur retournée par l'API Windows"
      end

      attribute 152450 "pvLastWinAPIerrorText"
	protected explicit_type "std::string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Texte de la dernière erreur survenue"
      end

      operation 158722 "zmsThread"
	private explicit_return_type ""
	nparams 1
	  param inout name "" type class_ref 137858 // zmsThread
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " On interdit la copie"
      end

      attribute 152578 "pvThreadHandle1"
	private explicit_type "HANDLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 152706 "pvThreadHandle2"
	private explicit_type "HANDLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 152834 "pvMutex"
	private explicit_type "HANDLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 152962 "pvEndThread"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 137986 "zmsTrainCompositionUnit"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Attributs d'une unité dans la composition du train

 Attributs d'une unité dans la composition du train.
 Une unité est toujours composée d'une Re450 et d'une Bt-SBZ"
      operation 160514 "zmsTrainCompositionUnit"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 160642 "~zmsTrainCompositionUnit"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 160770 "addVehicule"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "vehicule" type class_ref 138114 // zmsTrainVehicule
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Ajoute un véhicule à l'unité

 Ajoute un véhicule à l'unité.
 Le véhicule est placé automatiquement au bon emplacement (position 0 ou 1)
 selon son type (Re450 ou Bt), ainsi que la présence ou non d'une Bt maître.
 Il faut toujours placer le maître (ZST) en premier pour que le placement 
 fonctionne correctement.

 \\param vehicule Instance du véhicule à placer dans l'unité
 \\pre L'instance de véhicule doit être valide, et sont adresse définie"
      end

      operation 160898 "setAttributes"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit les attribut des véhicules de l'unité

 Définit les attribut des véhicules de l'unité.
 Reconnaît les attributs selon les informations
 de la trame de diagnostic et l'adresse ZMS.
 Il faut au préalable avoir définit:
   - L'adresse des véhicules
   - Le type des véhicules
   - Le numéro d'unité dans la composition

 \\param ZSTdiagFrame Instance de la trame de diagnostic provenant de la ZST
 \\return 0 ou une erreur listée dans zmsError.h
 \\pre diagFrame doit être une instance valide"
      end

      operation 161026 "vehiculeAt"
	preserve_cpp_body_indent public return_type class_ref 138114 // zmsTrainVehicule
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le véhiule pour la position donnée

\\param position Position du véhicule dans la composition
\\return Véhicule pour la position donnée, ou un pointeur Null"
      end

      operation 161154 "setNumber"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "unitNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le numéro d'unité dans le train

 Définit le numéro d'unité dans le train. Lors de la distribution des addresses,
 la ZST adresse chaque station esclave (UST) en partant en premier vers l'arrière
 du train (0x01, 0x02, ...) , puis dans l'autre direction (0x21, 0x22, ...).
 Documents de référence:
   GVT 7 550 732
   GVT 7 550 737

 \\param unitNumber Numéro d'unité à attribuer à cette unité"
      end

      operation 161282 "number"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Numéro d'unité dans le train

 Numéro d'unité dans le train. Voir setNumber()"
      end

      operation 161410 "direction"
	preserve_cpp_body_indent public return_type class_ref 138242 // direction_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Sens de marche de l'unité

 Sens de marche de l'unité. Le sens de marche
 conventionnel est celui du véhicule étant maître
 du bus (ZST)."
      end

      operation 161538 "invertDirection"
	preserve_cpp_body_indent public return_type class_ref 135170 // zms_error_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Inverse le sens de marche de l'unité

 Inverse le sens de marche de l'unité.
 Les deux véhicules de l'unités seront aussi croisés
 (car on parle bel et bien d'inverser le sens de marche de 
 l'unité complète)

 \\return 0 ou une erreur listée dans zmsError.h"
      end

      operation 161666 "reCouplingSet"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Récupère l'état d'attelage de la Re450 pour cette unité"
      end

      operation 161794 "btCouplingSet"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Récupère l'état d'attelage de la Bt pour cette unité"
      end

      operation 161922 "setCouplingStates"
	preserve_cpp_body_indent private return_type class_ref 135170 // zms_error_t
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Définit l'état des attelages pour les 2 véhicules"
      end

      operation 162050 "setDirection"
	preserve_cpp_body_indent private return_type class_ref 135170 // zms_error_t
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//On adopte la convetion suivante:
//- La représentation normale du sens de marche est celui de la ZST
//
//Lorsque la trame de diagnostic provenant de la ZST est la seule disponible,
//le seul moyen de déterminer le sens de marche est l'adresse de sous-station
//(qui donne l'emplacement dans la composition), et l'état des attelages.
//Ceci ne donne que le sens de marche des unités d'extrémités du train.
//
//NOTE: Si la trame de diagnostic de la sous-station courante est disponible, il est alors
//possible d'utiliser le signal \"directionToMasterIsB\" combiné à l'adresse pour déterminer
//le sens de marche. Dans ce cas:
//- Une sous-station (UST), qui est forcément une Re450, trouvera
//la station maître (ZST) du côté A si elle est à l'arrière du train
//- Si la sous-station est l'avant du train, l'inverse s'applique

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Définit le sens de marche de l'unité ainsi que celuis des deux véhicules
 Note: il faut que l'état des attelages aient été définits au préalable"
      end

      operation 162178 "setDirectionByCouplingStates"
	preserve_cpp_body_indent private return_type class_ref 135170 // zms_error_t
	nparams 1
	  param inout name "ZSTdiagFrame" type class_ref 135426 // zmsDiagFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Définit le sens de marche de l'unité ainsi que celuis des deux véhicules
 Note: il faut que l'état des attelages aient été définits au préalable"
      end

      attribute 153090 "pvNumber"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Numéro d'unité dans la composition"
      end

      classrelation 132354 // pvDirection (<directional composition>)
	relation 132354 *-->
	  a role_name "pvDirection" private
	    comment " Sens de l'unité"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 132354 // pvDirection (<directional composition>)
	  b parent class_ref 138242 // direction_t
      end

      classrelation 132482 // pvVehicules (<unidirectional association>)
	relation 132482 --->
	  a role_name "pvVehicules" multiplicity "[2]" private
	    comment " Véhicules de l'unité"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    classrelation_ref 132482 // pvVehicules (<unidirectional association>)
	  b parent class_ref 138114 // zmsTrainVehicule
      end

      classrelation 132610 // pvPassiveBt (<unidirectional association>)
	relation 132610 --->
	  a role_name "pvPassiveBt" private
	    comment " Utile pour le destructeur"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 132610 // pvPassiveBt (<unidirectional association>)
	  b parent class_ref 138114 // zmsTrainVehicule
      end
    end

    class 138114 "zmsTrainVehicule"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! \\brief Attributs d'un véhicule dans la composition dûn train

 Attributs d'un véhicule dans la composition du train."
      class 138242 "direction_t"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 153602 "UNDEFINED"
	  public type class_ref 138242 // direction_t
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 153730 "NORMAL"
	  public type class_ref 138242 // direction_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 153858 "INVERTED"
	  public type class_ref 138242 // direction_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 138370 "vehicule_type_t"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 153218 "UNKNOW"
	  public type class_ref 138370 // vehicule_type_t
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 153346 "RE450"
	  public type class_ref 138370 // vehicule_type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 153474 "BTSBZ"
	  public type class_ref 138370 // vehicule_type_t
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 162306 "zmsTrainVehicule"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 162434 "setType"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "zmsMode" type class_ref 137346 // zms_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le type du véhicule à partir du mode (ZLOK,STWG,ULOK) retourné par le MICAS

 Détermine le type à l'aide de la méthode zmsDiagFrame::micasMode()
 Cette méthode définit aussi l'attribut isZST"
      end

      operation 162562 "setType"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "type" type class_ref 138370 // vehicule_type_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le type du véhicule

 \\param type Type de véhicule"
      end

      operation 162690 "micasModeText"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Mode d'exploitation du MICAS (OFF, STWG, ZLOK ou ULOK)"
      end

      operation 162818 "type"
	preserve_cpp_body_indent public return_type class_ref 138370 // vehicule_type_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Type de véhicule (Re450 ou Bt-SBZ)

 \\return Type de véhicule"
      end

      operation 162946 "typeText"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Type de véhicule sous forme de texte

 \\return Type de véhicule sous forme de texte"
      end

      operation 163074 "isZST"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne true si le véhicule est maître du bus ZMS"
      end

      operation 163202 "setAddress"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "address" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit l'adresse du véhicule pour le bus ZMS

 Si l'adresse passée en paramètre est 0x20, l'attribut
 isZST sera positionné à true

 \\param address Adresse à attribuer à ce véhicule"
      end

      operation 163330 "address"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Adresse du véhicule pour le bus ZMS"
      end

      operation 163458 "micasModeAndAddress"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Mode d'exploitation et adresse ZMS"
      end

      operation 163586 "setFrontCouplingOccupied"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "occupied" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit l'attelage frontal comme occupé

 Définit l'attelage frontal comme occupé, autrement dit,
 un autre véhicule est couplé."
      end

      operation 163714 "frontCouplingOccupied"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne l'état de l'attelage frontal"
      end

      operation 163842 "setBtCouplingOccupied"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "occupied" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit l'attelage de la Bt comme occupé. Valable uniquement si le véhicule est de type Re450

 Définit l'attelage de la Bt comme occupé.
 Valable uniquement si le véhicule est de type Re450"
      end

      operation 163970 "btCouplingOccupied"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne l'état de l'attelage côté Bt. Valable uniquement si le véhicule est de type Re450"
      end

      operation 164098 "setDirection"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "dir" type class_ref 138242 // direction_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Définit le sens de marche du véhicule

 Sens de marche du véhicule."
      end

      operation 164226 "direction"
	preserve_cpp_body_indent public return_type class_ref 138242 // direction_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Sens de marche du véhicule

 Sens de marche du véhicule."
      end

      operation 164354 "invertDirection"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Inverse le sens de marche s'il est définit"
      end

      operation 164482 "pictureBaseName"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "! \\brief Retourne le nom de l'image à afficher

 \\return Le nom de l'image à afficher, sans extention de fichier"
      end

      classrelation 132738 // pvType (<directional composition>)
	relation 132738 *-->
	  a role_name "pvType" private
	    comment "Re450, Bt"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 132738 // pvType (<directional composition>)
	  b parent class_ref 138370 // vehicule_type_t
      end

      classrelation 132866 // pvMicasMode (<directional composition>)
	relation 132866 *-->
	  a role_name "pvMicasMode" private
	    comment " Mode d'exploitation du MICAS"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 132866 // pvMicasMode (<directional composition>)
	  b parent class_ref 137346 // zms_mode_t
      end

      attribute 153986 "pvIsZST"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 154114 "pvAddress"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 154242 "pvFrontCouplingOccupied"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 154370 "pvBtCouplingOccupied"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 132994 // pvDirection (<directional composition>)
	relation 132994 *-->
	  a role_name "pvDirection" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 132994 // pvDirection (<directional composition>)
	  b parent class_ref 138242 // direction_t
      end
    end
  end

  deploymentview 128002 "src"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 128002 "zmsBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134914 // mdtBuffer
      end
    end

    artifact 128130 "zmsComm"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135042 // zmsComm
      end
    end

    artifact 128258 "zmsCsvFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136450 // zmsCsvFile
      end
    end

    artifact 128386 "zmsCsvFileLine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136706 // zmsCsvFileLine
      end
    end

    artifact 128514 "zmsDeviceError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135810 // zmsDeviceError
      end
    end

    artifact 128642 "zmsDeviceErrorLog"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136066 // zmsDeviceErrorLog
      end
    end

    artifact 128770 "zmsDiagFrame"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135426 // zmsDiagFrame
      end
    end

    artifact 128898 "zmsDiagFrameCsv"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137474 // zmsDiagFrameCsv
      end
    end

    artifact 129026 "zmsDisplayBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135938 // zmsDisplayBuffer
      end
    end

    artifact 129154 "zmsError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135170 // zms_error_t
	class_ref 136834 // zmsError
      end
    end

    artifact 129282 "zmsErrorAttribute"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137602 // zmsErrorAttribute
      end
    end

    artifact 129410 "zmsFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136578 // zmsFile
      end
    end

    artifact 129538 "zmsFrame"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136322 // zmsFrame
      end
    end

    artifact 129666 "zmsFrameLog"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135682 // zmsFrameLog
      end
    end

    artifact 129794 "zmsHtmlReport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136194 // zmsHtmlReport
      end
    end

    artifact 129922 "zmsLog"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137090 // zmsLog
      end
    end

    artifact 130050 "zmsResultFrame"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137218 // zmsResultFrame
      end
    end

    artifact 130178 "zmsSerialPort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135298 // zmsSerialPort
      end
    end

    artifact 130306 "zmsThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137858 // zmsThread
      end
    end

    artifact 130434 "zmsTrainComposition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135554 // zmsTrainComposition
      end
    end

    artifact 130562 "zmsTrainCompositionUnit"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137986 // zmsTrainCompositionUnit
      end
    end

    artifact 130690 "zmsTrainVehicule"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138114 // zmsTrainVehicule
      end
    end
  end
end
