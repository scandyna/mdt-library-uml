class zmsError
!!!145154.cpp!!!	~zmsError()
  clear();
!!!145282.cpp!!!	loadFile(in filePath : string, in fieldSeparator : char = ';') : bool
  int errorNumber, i;
  zmsCsvFile file;
  string str, errorLanguage, errorText;
  zmsErrorAttribute *ea;
  // Ouverture du fichier
  if(!file.openRd(filePath)){
    cerr << "zmsError::loadFile(): unable to read file '" << filePath << "'" << endl;
    return false;
  }
  // Lecture du fichier
  if(!file.readLines()){
    cerr << "zmsError::loadFile(): unable to parse file" << endl;
    return false;
  }
  // On stocke les résultats
  errorNumber = -1;
  for(i=0; i<(int)file.lines().size(); i++){
    // Premier champ: no d'erreur
    str = file.valueAt(i, 0);
    if(sscanf(str.c_str(), "%d", &errorNumber) != 1){
      cerr << "zmsError::loadFile(): numeric conversion failed for '" << str << "'" << endl;
      return false;
    }
    // Deuxième champ: langue
    errorLanguage = file.valueAt(i, 1);
    // Troisième champ: texte
    errorText = file.valueAt(i, 2);
    // Création et stockage d'une instance d'attributs si pas encore existante pour le No d'erreur
    if(pvAttributes.count(errorNumber) < 1){
      ea =  new zmsErrorAttribute(errorNumber);
      pvAttributes.insert(pair<int,zmsErrorAttribute*>(errorNumber,ea));
    }
    // Ajout du texte
    ea->addText(errorLanguage, errorText);
  }
  file.close();
  return true;
!!!145410.cpp!!!	clear() : void
  multimap<int,zmsErrorAttribute*>::const_iterator it;

  for(it = pvAttributes.begin(); it != pvAttributes.end(); it++){
    if((*it).second != 0){
      delete (*it).second;
    }
  }
  pvAttributes.clear();
!!!145538.cpp!!!	text(in errorNumber : int, in language : string) : string
  multimap<int,zmsErrorAttribute*>::const_iterator itb, ite, it;

  if(pvAttributes.size() < 1){
    return "";
  }
  // Recherche du texte associé à l'erreur
  itb = pvAttributes.lower_bound(errorNumber);
  ite = pvAttributes.upper_bound(errorNumber);
  for(it = itb; it != ite; it++){
    if(it != pvAttributes.end()){
      return (*it).second->text(language);
    }
  }
  // Aucune occurence trouvée
  return "";
